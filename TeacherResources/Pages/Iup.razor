@page "/iup"
@using System.Net.Mime
@inject HttpClient Http

<PageTitle>IUP</PageTitle>

<h4>Matematikk </h4>

@if (pupilWork == null)
{
    <p>
        <em>Loading...</em>
    </p> 
}
else
{
    <div class="row">
                <div class="col">
                    <div class="row">
                        <h5>Generell del:</h5>
                        <textarea @bind="textAreaCustomOnInput" @bind:event="oninput" rows="8" placeholder="Skriv inn generell del som gjelder for alle elever i faget."></textarea>
                    </div>
                </div>
    </div>
    <div>
        <table class="table">
            <thead>
            <tr>
                <th>Vurderingskriterie</th>
                <th>Alternativer</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>@pupilWork.Question</td>
                <select class="form-control" id="Style" @bind="WorkDescription" @bind:event="onchange">
                    <option value="" selected disabled hidden>Velg alternativ</option>
                    @foreach (var alternative in pupilWork.Alternatives)
                    {
                        <option value="@alternative.Description">@alternative.Alternative</option>
                    }
                </select>
                                        
            </tr>
            <tr>
                <td>@pupilReflection.Question</td>
                <select class="form-control" id="Style" @bind="ReflectionDescription" @bind:event="onchange">
                    <option value="" selected disabled hidden>Velg alternativ</option>
                    @foreach (var alternative in pupilReflection.Alternatives)
                    {
                        <option value="@alternative.Description">@alternative.Alternative</option>
                    }
                </select>
                                                    
            </tr>
            <tr>
                <td>@pupilDevelopment.Question</td>
                <select class="form-control" id="Style" @bind="DevelopmentDescription" @bind:event="onchange">
                    <option value="" selected disabled hidden>Velg alternativ</option>
                    @foreach (var alternative in pupilDevelopment.Alternatives)
                    {
                        <option value="@alternative.Description">@alternative.Alternative</option>
                    }
                </select>
                                                    
            </tr>
            <tr>
                <td>@pupilFocusTopics.Question</td>
                <select class="form-control" id="Style" @bind="FocusTopicDescription" @bind:event="onchange">
                    <option value="" selected disabled hidden>Velg alternativ</option>
                    @foreach (var alternative in pupilDevelopment.Alternatives)
                    {
                        <option value="@alternative.Description">@alternative.Alternative</option>
                    }
                </select>
                                                    
            </tr>
            </tbody>
        </table>
    </div>
    <div class="row">

        <div class="col">
            <div class="row">
                <h5>Generert tekst:</h5>
                <InputTextArea @bind-Value="@TextAreaResult" rows="8"  onClick="this.select();"/>
            </div>
        </div>
    </div>
}

@code {

    private MathEvaluation? pupilWork;
    private MathEvaluation? pupilReflection;
    private MathEvaluation? pupilDevelopment;
    private MathEvaluation? pupilFocusTopics;
    
    private Dictionary<int, List<CriteriaAlternative>> aidDic;
    private Dictionary<string, Dictionary<string, string>> qaDictionary;

    public string WorkDescription { get; set; } //= string.Empty;
    public string ReflectionDescription { get; set; } //= string.Empty;
    public string DevelopmentDescription { get; set; } //= string.Empty;
    public string FocusTopicDescription { get; set; } //= string.Empty;
    public string FullDescription { get ; set; } //= string.Empty;


    private string textAreaCustomOnInput = "";
    private string textAreaCustomInput = "test";
    public string TextAreaCustomInput { get; set; }
    
    
    private string testDesc; // = string.Empty;
    public string TextAreaResult
    {
        get { return $"{textAreaCustomOnInput}\n{WorkDescription}\n{ReflectionDescription}\n{DevelopmentDescription}\n{FocusTopicDescription}"; }   // get method
        set { testDesc = value; }  // set method
    }

    
    private int rows = 10;

    protected override async Task OnInitializedAsync()
    {
        pupilWork = await Http.GetFromJsonAsync<MathEvaluation>("sample-data/pupilWork.json");
        pupilReflection = await Http.GetFromJsonAsync<MathEvaluation>("sample-data/pupilReflection.json");
        pupilDevelopment = await Http.GetFromJsonAsync<MathEvaluation>("sample-data/pupilDevelopment.json");
        pupilFocusTopics = await Http.GetFromJsonAsync<MathEvaluation>("sample-data/pupilFocusTopics.json");
        
    }
    
    

    

    public class MathEvaluation
    {
        public int QID { get; set; }
        public string Question { get; set; }
        public List<CriteriaAlternative> Alternatives { get; set; }
    }

    public class CriteriaAlternative
    {
        public int AID { get; set; }
        public string Alternative { get; set; }
        public string Description { get; set; }
    }
}